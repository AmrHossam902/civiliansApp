name: NationalRecords

services:

  nginx:
    image: nginx
    ports:
      - 80:80
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      mynet:
        ipv4_address: 172.20.0.20
    depends_on:
      - frontend
      - backend

  frontend: 
    build:
      context: ../FrontEnd
      dockerfile: dockerfile
      args:
        NEXT_PUBLIC_URL: ${PUBLIC_URL} 
        FRONTEND_CONTAINER_PORT: ${FRONTEND_CONTAINER_PORT}
    restart: always
    image: nr-frontend
    ports:
      - ${FRONTEND_EXPOSED_PORT}:${FRONTEND_CONTAINER_PORT}
    environment:
      NEXT_PUBLIC_URL: ${PUBLIC_URL}
      BACKEND_INTERNAL_URL : ${BACKEND_INTERNAL_URL}
      JWT_SECRET : ${JWT_SECRET}
    networks:
      mynet:
        ipv4_address: 172.20.0.21
    extra_hosts:
      - ${FRONTEND_DNS_NAME}:172.20.0.21

  backend:
    build: ../graphql-api
    restart: always
    image: nr-backend
    ports:
      - ${BACKEND_EXPOSED_PORT}:${BACKEND_CONTAINER_PORT}
    environment:
      PUBLIC_URL: ${PUBLIC_URL}
      FRONTEND_INTERNAL_URL:  ${FRONTEND_INTERNAL_URL}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_ROOT_PASSWORD: ${DB_PASSWORD}
      PORT: ${BACKEND_CONTAINER_PORT}
    networks:
      mynet:
        ipv4_address: 172.20.0.22
    extra_hosts:
      - ${BACKEND_DNS_NAME}:172.20.0.22
    depends_on:
      - mysql

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PUBLIC_PORT}:${DB_PORT}
    volumes:
      - ./data:/docker-entrypoint-initdb.d
    networks:
      mynet:
        ipv4_address: 172.20.0.23


networks:
  mynet:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.0.0/24